#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>

int Pai(long int n);
double Filho(double n);
void Neto(int n,char x,char y,char z);

int main(void){
	printf("\n-----INICIO DO PROCESSO PAI-----\n");
	pid_t pidPai = fork(); //Cria o processo pai	
	if (pidPai == 0){ 
		printf("\n*****INICIO DO PROCESSO FILHO*****\n");
		pid_t pidFilho = fork(); // Cria o processo filho		
		if (pidFilho == 0){
			printf("\n+++++INICIO DO PROCESSO NETO+++++\n");			
			Neto(6,'A','B','C');
			printf("\n+++++PROCESSO NETO FINALIZADO+++++\n");
		}
		else{
			printf("\n");
			for (int i=0; i<100; i++) printf(" %.0f /", Filho(i));
			printf("\n*****PROCESSO FILHO FINALIZADO*****\n");
			wait(0);
		}
	}
	else{
		printf("\n10! = ");
		printf("%d\n", Pai(10));
		printf("\n-----PROCESSO PAI FINALIZADO-----\n");
		wait(0);
	}
	return 0;
}


int Pai(long int n){
	if (n==0) return 1;
	return (n * Pai(n-1));
	exit(0);
}

double Filho(double n){
	if(n <= 1){
	return n;	
	}
	double fibo = 1;
	double fiboant = 1;
	for(int i = 2;i < n ; i++){
	double temp = fibo;
	fibo+= fiboant;
	fiboant = temp;	
	}
	return fibo;
	exit(0);
}

void Neto(int n,char x,char y,char z){
	if(n>0){
		Neto(n-1,x,z,y);
		printf("%c -> %c /",x,y);
		Neto(n-1,z,y,x);
	}
}
